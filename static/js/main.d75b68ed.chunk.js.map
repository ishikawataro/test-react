{"version":3,"sources":["logo.svg","components/CountUpButton.jsx","components/Article.jsx","components/InputBox.jsx","components/Counter.jsx","App.js","reportWebVitals.js","index.js"],"names":["CountUpButton","props","onClick","pLike","Article","useState","like","setLike","isAvailable","setIsAvailable","console","log","countUp","prevState","text","subtext","InputBox","name","setName","type","onChange","event","target","value","handleName","Counter","count","setCount","useEffect","App","className","src","logo","alt","alert","id","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAAe,G,KAAA,IAA0B,kC,sBCQ1BA,EARK,SAACC,GACjB,OACI,wBAAQC,QAASD,EAAMC,QAAvB,SACKD,EAAME,SC4BJC,EA5BD,SAACH,GAEX,MAAqBI,mBAAS,GAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAmCF,oBAAS,GAA5C,mBAAOG,EAAP,KAAmBC,EAAnB,KACAC,QAAQC,IAAIH,GACZ,IAAMI,EAAQ,WAENL,EADDC,EACS,SAAAK,GAAS,OAAEA,EAAU,GAErB,SAAAA,GAAS,OAAEA,KAQ3B,OACI,gCACI,cAAC,EAAD,CAAeV,MAAOG,EAAMJ,QAASU,IACrC,yBAAQV,QAASU,EAAjB,UAA2BN,EAAML,EAAMa,QACvC,yBAASZ,QARE,WACfO,GAAe,SAAAI,GAAS,OAAGA,MAOvB,UACKL,EAAc,MAAQ,KAAMP,EAAMc,eCVpCC,EAbA,WACX,MAAqBX,mBAAS,IAA9B,mBAAOY,EAAP,KAAYC,EAAZ,KAKA,OACI,8BACI,uBAAOC,KAAK,OAAOC,SAAU,SAACC,GAAD,OANpB,SAACA,GACdH,EAAQG,EAAMC,OAAOC,OACrBb,QAAQC,IAAIM,GAI8BO,CAAWH,SCkB9CI,EA1BD,SAACxB,GACX,MAAsBI,mBAAS,GAA/B,mBAAMqB,EAAN,KAAYC,EAAZ,KAUA,OAHAC,qBAAU,WACNlB,QAAQC,IAAI,sBAAsBe,KACpC,CAACA,IAEC,gCACI,+DACUA,KAEV,wBAAQxB,QAdF,WACVyB,GAAS,SAAAd,GAAS,OAAEA,EAAU,MAa1B,gBAGA,wBAAQX,QAdA,WACZyB,GAAS,SAAAd,GAAS,OAAEA,EAAU,MAa1B,sBCeGgB,EA9BL,WAER,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,wBAAQ/B,QAAS,WAAKgC,MAAM,OAA5B,gCAGA,cAAC,EAAD,CAASpB,KAAK,uCAASC,QAAQ,6CAAUoB,GAAG,OAC5C,cAAC,EAAD,CAASrB,KAAK,uCAASC,QAAQ,qBAAMoB,GAAG,OACxC,cAAC,EAAD,IACA,cAAC,EAAD,CAASrB,KAAK,OACd,cAAC,EAAD,CAASA,KAAK,SACd,mBACEgB,UAAU,WACVM,KAAK,sBACLd,OAAO,SACPe,IAAI,sBAJN,+BCXOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d75b68ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const CountUpButton=(props)=>{\r\n    return(\r\n        <button onClick={props.onClick}>\r\n            {props.pLike}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default CountUpButton;","import {  useState } from \"react\";\r\nimport CountUpButton from \"./CountUpButton\";\r\n\r\nconst Article=(props)=>{\r\n\r\n    const [like,setLike]=useState(0);\r\n    const [isAvailable,setIsAvailable]=useState(false);\r\n    console.log(isAvailable)\r\n    const countUp=()=>{\r\n        if(isAvailable){\r\n            setLike(prevState=>prevState+1)\r\n        }else{\r\n            setLike(prevState=>prevState)\r\n        }\r\n        \r\n    }\r\n    const switchButton=()=>{\r\n        setIsAvailable(prevState=>!prevState)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <CountUpButton pLike={like} onClick={countUp} />\r\n            <button onClick={countUp}>{like}{props.text}</button>\r\n            <button  onClick={switchButton} >\r\n                {isAvailable ? \"OFF\" : \"ON\"}{props.subtext}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Article;","import { useState } from \"react\";\r\n\r\nconst InputBox=()=>{\r\n    const [name,setName]=useState(\"\")\r\n    const handleName=(event)=>{\r\n        setName(event.target.value)\r\n        console.log(name)\r\n    }\r\n    return(\r\n        <div>\r\n            <input type=\"text\" onChange={(event)=>handleName(event)}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputBox;","import { useEffect, useState } from \"react\"\r\n\r\nconst Counter=(props)=>{\r\n    const[count,setCount]=useState(0)\r\n    const countUp=()=>{\r\n        setCount(prevState=>prevState+1)\r\n    }\r\n    const countDown=()=>{\r\n        setCount(prevState=>prevState-1)\r\n    }\r\n    useEffect(()=>{\r\n        console.log(\"current count is...\",count)\r\n    },[count])\r\n    return(\r\n        <div>\r\n            <p>\r\n                カウント：{count}\r\n            </p>\r\n            <button onClick={countUp}>\r\n                Up\r\n            </button>\r\n            <button onClick={countDown}>\r\n                Down\r\n            </button>\r\n        </div>\r\n        \r\n    );\r\n};\r\nexport default Counter;","import logo from './logo.svg';\nimport './App.css';\nimport Article from './components/Article';\nimport InputBox from './components/InputBox';\nimport Counter from './components/Counter';\n\nconst App=()=> {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <button onClick={()=>{alert(\"OK\")}}>\n          ボタン\n        </button>\n        <Article text=\"石川県総務部\" subtext=\"デジタル推進課\" id=\"de\" />\n        <Article text=\"石川県総務部\" subtext=\"管財課\" id=\"ka\" />\n        <InputBox />\n        <Counter text=\"Up\" />\n        <Counter text=\"Down\" />\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}